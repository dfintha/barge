TARGET={}

ASM={}
ASMFLAGS=-f elf64
ASMSRC=$(shell find src -type f -name '*.s')
ASMOBJ=$(patsubst src/%.s,build/$(TARGET)/obj/%.s.o,$(ASMSRC))

CC={}
CFLAGS={}
CSRC=$(shell find src -type f -name '*.c')
COBJ=$(patsubst src/%.c,build/$(TARGET)/obj/%.c.o,$(CSRC))
OBJCFLAGS={}
OBJCSRC=$(shell find src -type f -name '*.m')
OBJCOBJ=$(patsubst src/%.m,build/$(TARGET)/obj/%.m.o,$(OBJCSRC))

CXX={}
CXXFLAGS={}
CXXSRC=$(shell find src -type f -name '*.cpp')
CXXOBJ=$(patsubst src/%.cpp,build/$(TARGET)/obj/%.cpp.o,$(CXXSRC))
OBJCXXFLAGS={}
OBJCXXSRC=$(shell find src -type f -name '*.mm')
OBJCXXOBJ=$(patsubst src/%.mm,build/$(TARGET)/obj/%.mm.o,$(OBJCXXSRC))

FORTRAN={}
FORTRANFLAGS={}
FORTRANSRC=$(shell find src -type f -name '*.f90')
FORTRANOBJ=$(patsubst src/%.f90,build/$(TARGET)/obj/%.f90.o,$(FORTRANSRC))

COBOL=cobc
COBOLFLAGS={}
COBOLSRC=$(shell find src -type f -name '*.cob')
COBOLOBJ=$(patsubst src/%.cob,build/$(TARGET)/obj/%.cob.o,$(COBOLSRC))

LD={}
LDFLAGS={}
LDSCRIPTS=$(shell find src -type f -name '*.ld')

NAME={}
BINARY=build/$(TARGET)/$(NAME)
SOURCES=$(ASMSRC) $(CSRC) $(CXXSRC) $(OBJCSRC) $(OBJCXXSRC) $(FORTRANSRC) $(COBOLSRC)
OBJECTS=$(ASMOBJ) $(COBJ) $(CXXOBJ) $(OBJCOBJ) $(OBJCXXOBJ) $(FORTRANOBJ) $(COBOLOBJ)

{} # Colorization Constants

.PHONY: all

all: $(BINARY)

{} # C Dependencies
{} # C++ Dependencies

$(BINARY): $(OBJECTS) $(LDSCRIPTS)
	@mkdir -p $(shell dirname $@)
	@printf '%sLinking executable %s%s\n' $(GREEN) $@ $(RESET)
	{}
	@printf '%sBuilt target %s%s\n' $(BLUE) $(NAME) $(RESET)

build/$(TARGET)/obj/%.s.o: src/%.s
	@mkdir -p $(shell dirname $@)
	@printf '%s%sBuilding assembly object %s.%s\n' $(GREEN) $(DIM) $@ $(RESET)
	@$(ASM) $(ASMFLAGS) $< -o $@

build/$(TARGET)/obj/%.c.o: src/%.c
	@mkdir -p $(shell dirname $@)
	@printf '%s%sBuilding C object %s.%s\n' $(GREEN) $(DIM) $@ $(RESET)
	@$(CC) $(CFLAGS) -c $< -o $@

build/$(TARGET)/obj/%.cpp.o: src/%.cpp
	@mkdir -p $(shell dirname $@)
	@printf '%s%sBuilding C++ object %s.%s\n' $(GREEN) $(DIM) $@ $(RESET)
	@$(CXX) $(CXXFLAGS) -c $< -o $@

build/$(TARGET)/obj/%.m.o: src/%.m
	@mkdir -p $(shell dirname $@)
	@printf '%s%sBuilding Objective-C object %s.%s\n' $(GREEN) $(DIM) $@ $(RESET)
	@$(CC) $(OBJCFLAGS) -c $< -o $@

build/$(TARGET)/obj/%.mm.o: src/%.mm
	@mkdir -p $(shell dirname $@)
	@printf '%s%sBuilding Objective-C++ object %s.%s\n' $(GREEN) $(DIM) $@ $(RESET)
	@$(CXX) $(OBJCXXFLAGS) -c $< -o $@

build/$(TARGET)/obj/%.f90.o: src/%.f90
	@mkdir -p $(shell dirname $@)
	@printf '%s%sBuilding FORTRAN object %s.%s\n' $(GREEN) $(DIM) $@ $(RESET)
	@$(FORTRAN) $(FORTRANFLAGS) -Jbuild/$(TARGET) -c $< -o $@

build/$(TARGET)/obj/%.cob.o: src/%.cob
	@mkdir -p $(shell dirname $@)
	@printf '%s%sBuilding Cobol object %s.%s\n' $(GREEN) $(DIM) $@ $(RESET)
	@$(COBOL) $(COBOLFLAGS) -c $< -o $@
